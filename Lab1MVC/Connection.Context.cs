//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lab1MVC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Connection : DbContext
    {
        public Connection()
            : base("name=Connection")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<App_User> App_User { get; set; }
        public virtual DbSet<Canton> Canton { get; set; }
        public virtual DbSet<District> District { get; set; }
        public virtual DbSet<Experienced> Experienced { get; set; }
        public virtual DbSet<Professor> Professor { get; set; }
        public virtual DbSet<Province> Province { get; set; }
        public virtual DbSet<Student> Student { get; set; }
    
        public virtual int Add_Professor(string email, string password, string name, string lastName, string phone, Nullable<int> province, Nullable<int> canton, string district, Nullable<bool> is_admin)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(int));
    
            var cantonParameter = canton.HasValue ?
                new ObjectParameter("canton", canton) :
                new ObjectParameter("canton", typeof(int));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var is_adminParameter = is_admin.HasValue ?
                new ObjectParameter("is_admin", is_admin) :
                new ObjectParameter("is_admin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Professor", emailParameter, passwordParameter, nameParameter, lastNameParameter, phoneParameter, provinceParameter, cantonParameter, districtParameter, is_adminParameter);
        }
    
        public virtual int Add_Student(string email, string password, string name, string lastName, string phone, Nullable<int> province, Nullable<int> canton, string district, string interest)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(int));
    
            var cantonParameter = canton.HasValue ?
                new ObjectParameter("canton", canton) :
                new ObjectParameter("canton", typeof(int));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var interestParameter = interest != null ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Student", emailParameter, passwordParameter, nameParameter, lastNameParameter, phoneParameter, provinceParameter, cantonParameter, districtParameter, interestParameter);
        }
    
        public virtual int Delete_Student(Nullable<int> student_id)
        {
            var student_idParameter = student_id.HasValue ?
                new ObjectParameter("student_id", student_id) :
                new ObjectParameter("student_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Student", student_idParameter);
        }
    
        public virtual ObjectResult<Select_Canton_Result> Select_Canton()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Canton_Result>("Select_Canton");
        }
    
        public virtual ObjectResult<Select_Province_Result> Select_Province()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Province_Result>("Select_Province");
        }
    
        public virtual ObjectResult<View_Student_unacceptable_Result> View_Student_unacceptable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Student_unacceptable_Result>("View_Student_unacceptable");
        }
    
        public virtual int SpSelect_Province()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSelect_Province");
        }
    
        public virtual int SpAdd_Professor(string email, string password, string name, string lastName, string phone, Nullable<int> province, Nullable<int> canton, string district, Nullable<bool> is_admin)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(int));
    
            var cantonParameter = canton.HasValue ?
                new ObjectParameter("canton", canton) :
                new ObjectParameter("canton", typeof(int));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var is_adminParameter = is_admin.HasValue ?
                new ObjectParameter("is_admin", is_admin) :
                new ObjectParameter("is_admin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpAdd_Professor", emailParameter, passwordParameter, nameParameter, lastNameParameter, phoneParameter, provinceParameter, cantonParameter, districtParameter, is_adminParameter);
        }
    
        public virtual int SpAdd_Student(string email, string password, string name, string lastName, string phone, Nullable<int> province, Nullable<int> canton, string district, string interest)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("province", province) :
                new ObjectParameter("province", typeof(int));
    
            var cantonParameter = canton.HasValue ?
                new ObjectParameter("canton", canton) :
                new ObjectParameter("canton", typeof(int));
    
            var districtParameter = district != null ?
                new ObjectParameter("district", district) :
                new ObjectParameter("district", typeof(string));
    
            var interestParameter = interest != null ?
                new ObjectParameter("interest", interest) :
                new ObjectParameter("interest", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpAdd_Student", emailParameter, passwordParameter, nameParameter, lastNameParameter, phoneParameter, provinceParameter, cantonParameter, districtParameter, interestParameter);
        }
    }
}
